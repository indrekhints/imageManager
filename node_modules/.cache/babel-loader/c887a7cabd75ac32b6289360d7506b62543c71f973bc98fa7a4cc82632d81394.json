{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport People from \"./People\"; // impordin andmes sisse komponendist People, salvestan state väärktuseks [people]\nimport PeopleComponent from './componenst/PeopleComponent';\nimport Form from './componenst/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [people, setPeople] = React.useState(People);\n  const addItem = newItem => {\n    // teen argumentidega funktsiooni et lisada uus item array se people!\n    setPeople(prevPeople => [...prevPeople, newItem]); // kasutan spread operaatorit  uued itemi lismiseks\n  };\n  const addEdited = (id, newData) => {\n    const newArray = people.map(person =>\n    // funktsioon  mis kasutab sisendeid id ja newData itereerib people array d. \n    person.id === id ? {\n      ...newData\n    } : person // funktsioon käib läbi people array ja kui tuvastab sama id mis on sisendis siis selle Itemi kirjutab \n    ); //üle uue data ga. Uueks dataks saab  komponendis EdidModali formi täitmiselt tekkiv info(või ehk.  data)\n    setPeople(newArray); // kuna map() tagastab meile uue array, siis peame people State muutma uueks arrayks. (people array\n  }; // on pea array, mida kuvatakse \n\n  const Delete = id => {\n    console.log(id);\n  };\n  //KUTSTUTAB ITEMI ARRAYST \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: people &&\n      /*#__PURE__*/\n      //  people && tähendab  conditional render, kui state muutuja omab sisu ehkt on (true), \n      _jsxDEV(\"div\", {\n        className: \"row\",\n        children: [\"                         \", people.map((person, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [\"   \", /*#__PURE__*/_jsxDEV(PeopleComponent, {\n            picture: person.picture,\n            phone: person.phone,\n            education: person.education,\n            name: person.name,\n            id: person.id,\n            addEdited: addEdited,\n            Delete: Delete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addItem: addItem /*     kuvame komponendi <Form /> , anname kaas props. muutujana funktsiooni addItem(). mida kirjeldasin üleval*/\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \"                                        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z8RML1W+QUUxnzTIWEuvxHbcLP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","People","PeopleComponent","Form","jsxDEV","_jsxDEV","App","_s","isModalOpen","setIsModalOpen","people","setPeople","addItem","newItem","prevPeople","addEdited","id","newData","newArray","map","person","Delete","console","log","className","children","index","picture","phone","education","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport People from \"./People\";                      // impordin andmes sisse komponendist People, salvestan state väärktuseks [people]\nimport PeopleComponent from './componenst/PeopleComponent';\nimport Form from './componenst/form';\n\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [people, setPeople] = React.useState(People)\n\n  const addItem = (newItem) => {                      // teen argumentidega funktsiooni et lisada uus item array se people!\n    setPeople(prevPeople => [...prevPeople, newItem]);// kasutan spread operaatorit  uued itemi lismiseks\n  };\n\n  const addEdited = (id, newData) => {\n    const newArray = people.map(person =>             // funktsioon  mis kasutab sisendeid id ja newData itereerib people array d. \n      person.id === id ? { ...newData } : person      // funktsioon käib läbi people array ja kui tuvastab sama id mis on sisendis siis selle Itemi kirjutab \n    );                                                 //üle uue data ga. Uueks dataks saab  komponendis EdidModali formi täitmiselt tekkiv info(või ehk.  data)\n    setPeople(newArray);                               // kuna map() tagastab meile uue array, siis peame people State muutma uueks arrayks. (people array\n  };                                                    // on pea array, mida kuvatakse \n\n  const Delete = (id) => {\n    console.log(id)\n  }\n  //KUTSTUTAB ITEMI ARRAYST \n  return (\n    <div className=\"App\">\n\n      <div className=\"container\">\n        {people && (                                    //  people && tähendab  conditional render, kui state muutuja omab sisu ehkt on (true), \n          <div className=\"row\">                         {/* arrayde puhul tähendb array liikmete olemas olu tagastust true, igal index kohal arrays. */}\n            {people.map((person, index) => (\n              <div className=\"col-md-4\" key={index}>   {/*   iterreerime üle people array ja igal kohal arrays  renderdame <PeopleComponendi />, millele anname kaasa \n                                                         //props muutujad, nt phone={person.phone}  */}\n                <PeopleComponent\n                  picture={person.picture}\n                  phone={person.phone}\n                  education={person.education}\n                  name={person.name}\n                  id={person.id}\n                  addEdited={addEdited}\n                  Delete={Delete}\n\n\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <Form\n        addItem={addItem}                      /*     kuvame komponendi <Form /> , anname kaas props. muutujana funktsiooni addItem(). mida kirjeldasin üleval*/\n      />                                        {/* ilmselt oleksin saanud kasutada ühte form komponenti nii <EditModal/> is kui ka <Form /> */}\n\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAsB;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGb,KAAK,CAACC,QAAQ,CAACE,MAAM,CAAC;EAElD,MAAMW,OAAO,GAAIC,OAAO,IAAK;IAAuB;IAClDF,SAAS,CAACG,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAED,OAAO,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,SAAS,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IACjC,MAAMC,QAAQ,GAAGR,MAAM,CAACS,GAAG,CAACC,MAAM;IAAgB;IAChDA,MAAM,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGC;IAAQ,CAAC,GAAGG,MAAM,CAAM;IAClD,CAAC,CAAC,CAAiD;IACnDT,SAAS,CAACO,QAAQ,CAAC,CAAC,CAA+B;EACrD,CAAC,CAAC,CAAoD;;EAEtD,MAAMG,MAAM,GAAIL,EAAE,IAAK;IACrBM,OAAO,CAACC,GAAG,CAACP,EAAE,CAAC;EACjB,CAAC;EACD;EACA,oBACEX,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBpB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBf,MAAM;MAAA;MAAyC;MAC9CL,OAAA;QAAKmB,SAAS,EAAC,KAAK;QAAAC,QAAA,GAAC,2BAAyB,EAC3Cf,MAAM,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEM,KAAK,kBACxBrB,OAAA;UAAKmB,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAa,KAAG,eAEvCpB,OAAA,CAACH,eAAe;YACdyB,OAAO,EAAEP,MAAM,CAACO,OAAQ;YACxBC,KAAK,EAAER,MAAM,CAACQ,KAAM;YACpBC,SAAS,EAAET,MAAM,CAACS,SAAU;YAC5BC,IAAI,EAAEV,MAAM,CAACU,IAAK;YAClBd,EAAE,EAAEI,MAAM,CAACJ,EAAG;YACdD,SAAS,EAAEA,SAAU;YACrBM,MAAM,EAAEA;UAAO;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGhB,CAAC;QAAA,GAZ2BR,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAa/B,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN7B,OAAA,CAACF,IAAI;MACHS,OAAO,EAAEA,OAAQ,CAAsB;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,4CAAwC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEV;AAAC3B,EAAA,CAnDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}