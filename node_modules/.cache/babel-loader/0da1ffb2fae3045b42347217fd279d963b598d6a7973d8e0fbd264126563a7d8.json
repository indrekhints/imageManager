{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainContent from './componenst/MainContent';\nimport data from './componenst/data';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport boxes from './componenst/boxes';\nimport BoxSisu from './componenst/boxSisu';\nimport BoxSisu2 from './BoxSisu2';\nimport Isikud from './Isikud';\nimport jobs from './jobs';\nimport People from \"./People\";\nimport PeopleComponent from './componenst/PeopleComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  {/* \n   const sisu = data.map((item, index) => (\n     <MainContent\n       key={index}\n       name={item.name}\n       text={item.text}\n       date={item.date}\n       img={item.img}\n       data={data}\n     />\n   )); \n     const lisa = () => {\n      return (\n        <div>\n          {data.map((item, index) => (\n            <div key={index}>\n              <p>{item.name}</p>\n              <p>{item.date}</p>\n            </div>\n          ))}\n        </div>\n      );\n    };\n    const [count, setCount] = React.useState(0)\n       const add = () => {\n      setCount(prevCount => prevCount === 5 ? 10 : prevCount + 1);\n    }\n    const subs = () => {\n      setCount(count - 1)\n    }\n    const [qst, setQst] = React.useState(\"yes\")\n    let muuda = () => {\n      setQst(prevQst => prevQst === \"yes\" ? \"no\" : \"yes\")\n    }\n       const [kalakutta, setKalakutta] = React.useState([\n      { id: \"kalakutta1\", name: \"Item 1\" },\n      { id: \"kalakutta2\", name: \"Item 2\" },\n      { id: \"kalakutta3\", name: \"Item 3\" },\n      { id: \"kalakutta4\", name: \"Item 4\" },\n      { id: \"kalakutta5\", name: \"Item 5\" }\n    ]);\n     \n    const Lisa = () => {\n      setKalakutta(prev => {\n        const newItem = {\n          id: `kalakutta ${kalakutta.length + 1}`,\n          item: `Item ${kalakutta.length + 1}`\n        }\n        return [...prev, newItem]\n      })\n    }\n       const deleteItem = (id) => {\n      setKalakutta(prev => prev.filter(item => item.id !== id));\n    }\n       const [weatherData, setWeatherData] = useState(null);\n       useEffect(() => {\n      \n      const fetchWeatherData = async () => {\n        try {\n          const response = await fetch('https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,wind_speed_10m&timezone=Europe%2FMoscow');\n          const data = await response.json();\n          setWeatherData(data);\n        } catch (error) {\n          console.error('Error fetching weather data:', error);\n        }\n      };\n         \n      fetchWeatherData();\n    }, []);\n       const DeleteItem = (id) => {\n      setWeatherData(prev => prev.filter(item => item.id !== id));\n    }\n       const [data, setData] = useState(\n      {\n        name: 'ints',\n        age: 41,\n        working: true\n      });\n       const picture = data.working ? \"/images/1.jpg\" : \"/images/2.jpg\";\n       const toggle = () => {\n      setData(prevData => ({\n        ...prevData,\n        working: !prevData.working\n      }));\n    }\n       const style = {\n      backgroundColor: \"\",\n      margin: \"3px\",\n      height: \"60px\",\n      width: \"60px\",\n      display: \"flex\",\n      flexDirextion: \"column\"\n    }\n       const vajuta = (id) => {\n      setBox(prevBox => {\n        return prevBox.map(item => item.id === id ? { ...item, on: !item.on } : item)\n         })\n       }\n       const [box, setBox] = useState(boxes)\n       const [isShown, setIsShown] = useState(true)\n    const toggleShown = () => {\n      return setIsShown(prev => !prev)\n    }\n       const [persons, setPersons] = useState(Isikud)\n    const [jobPlaces, setjobPlaces] = useState(jobs)\n       const displayWorking = (id) => {\n      setA(prevA => !prevA)\n      setPersons(prev => prev.map((person) => {\n           return person.id === id ? { ...person, working: !person.working } : person;\n      }))\n       }\n       const DelItem = (id) => {\n      setPersons(prev => prev.filter(person => person.id !== id))\n    }\n    const [a, setA] = useState(true)\n   const [messages, setMessages] = useState([\"a\", \"b\"])\n   */}\n  const [people, setPeople] = React.useState(People);\n  person.name.split(' ')[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: people && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: people.map((person, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(PeopleComponent, {\n            picture: person.picture,\n            phone: person.phone,\n            education: person.education,\n            name: person.name.split(' ')[0] !== \"Jane Smith\" ? \"William\" : person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4APAGZDEbUDd3dTiZkEmq0It6fM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainContent","data","React","useState","useEffect","boxes","BoxSisu","BoxSisu2","Isikud","jobs","People","PeopleComponent","jsxDEV","_jsxDEV","App","_s","people","setPeople","person","name","split","className","children","map","index","picture","phone","education","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport MainContent from './componenst/MainContent';\nimport data from './componenst/data';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport boxes from './componenst/boxes';\nimport BoxSisu from './componenst/boxSisu';\nimport BoxSisu2 from './BoxSisu2';\nimport Isikud from './Isikud';\nimport jobs from './jobs';\nimport People from \"./People\";\nimport PeopleComponent from './componenst/PeopleComponent';\n\n\nfunction App() {\n  {/* \n   const sisu = data.map((item, index) => (\n     <MainContent\n       key={index}\n       name={item.name}\n       text={item.text}\n       date={item.date}\n       img={item.img}\n       data={data}\n     />\n   )); \n     const lisa = () => {\n      return (\n        <div>\n          {data.map((item, index) => (\n            <div key={index}>\n              <p>{item.name}</p>\n              <p>{item.date}</p>\n            </div>\n          ))}\n        </div>\n      );\n    };\n    const [count, setCount] = React.useState(0)\n  \n    const add = () => {\n      setCount(prevCount => prevCount === 5 ? 10 : prevCount + 1);\n    }\n    const subs = () => {\n      setCount(count - 1)\n    }\n    const [qst, setQst] = React.useState(\"yes\")\n    let muuda = () => {\n      setQst(prevQst => prevQst === \"yes\" ? \"no\" : \"yes\")\n    }\n  \n    const [kalakutta, setKalakutta] = React.useState([\n      { id: \"kalakutta1\", name: \"Item 1\" },\n      { id: \"kalakutta2\", name: \"Item 2\" },\n      { id: \"kalakutta3\", name: \"Item 3\" },\n      { id: \"kalakutta4\", name: \"Item 4\" },\n      { id: \"kalakutta5\", name: \"Item 5\" }\n    ]);\n  \n  \n    const Lisa = () => {\n      setKalakutta(prev => {\n        const newItem = {\n          id: `kalakutta ${kalakutta.length + 1}`,\n          item: `Item ${kalakutta.length + 1}`\n        }\n        return [...prev, newItem]\n      })\n    }\n  \n    const deleteItem = (id) => {\n      setKalakutta(prev => prev.filter(item => item.id !== id));\n    }\n  \n    const [weatherData, setWeatherData] = useState(null);\n  \n    useEffect(() => {\n      \n      const fetchWeatherData = async () => {\n        try {\n          const response = await fetch('https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,wind_speed_10m&timezone=Europe%2FMoscow');\n          const data = await response.json();\n          setWeatherData(data);\n        } catch (error) {\n          console.error('Error fetching weather data:', error);\n        }\n      };\n  \n      \n      fetchWeatherData();\n    }, []);\n  \n    const DeleteItem = (id) => {\n      setWeatherData(prev => prev.filter(item => item.id !== id));\n    }\n  \n    const [data, setData] = useState(\n      {\n        name: 'ints',\n        age: 41,\n        working: true\n      });\n  \n    const picture = data.working ? \"/images/1.jpg\" : \"/images/2.jpg\";\n  \n    const toggle = () => {\n      setData(prevData => ({\n        ...prevData,\n        working: !prevData.working\n      }));\n    }\n  \n    const style = {\n      backgroundColor: \"\",\n      margin: \"3px\",\n      height: \"60px\",\n      width: \"60px\",\n      display: \"flex\",\n      flexDirextion: \"column\"\n    }\n  \n    const vajuta = (id) => {\n      setBox(prevBox => {\n        return prevBox.map(item => item.id === id ? { ...item, on: !item.on } : item)\n  \n      })\n  \n    }\n  \n    const [box, setBox] = useState(boxes)\n  \n    const [isShown, setIsShown] = useState(true)\n    const toggleShown = () => {\n      return setIsShown(prev => !prev)\n    }\n  \n    const [persons, setPersons] = useState(Isikud)\n    const [jobPlaces, setjobPlaces] = useState(jobs)\n  \n    const displayWorking = (id) => {\n      setA(prevA => !prevA)\n      setPersons(prev => prev.map((person) => {\n  \n        return person.id === id ? { ...person, working: !person.working } : person;\n      }))\n  \n    }\n  \n    const DelItem = (id) => {\n      setPersons(prev => prev.filter(person => person.id !== id))\n    }\n    const [a, setA] = useState(true)\n  const [messages, setMessages] = useState([\"a\", \"b\"])\n*/}\n  const [people, setPeople] = React.useState(People)\n  person.name.split(' ')[0];\n  return (\n    <div className=\"App\">\n\n      <div className=\"container\">\n        {people && (\n          <div className=\"row\">\n            {people.map((person, index) => (\n              <div className=\"col-md-4\" key={person.id}>\n                <PeopleComponent\n                  picture={person.picture}\n                  phone={person.phone}\n                  education={person.education}\n                  name={person.name.split(' ')[0] !== \"Jane Smith\" ? \"William\" : person.name}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n\n\n      <div> {/*\n              {messages && <p>you have {messages.map((item, index) => { item })}</p>} {messages && <p>you have {messages.map((item, index) => { return item })}</p>}\n                <button onClick={toggleShown}>Show/hide</button>\n                {isShown &&\n                  <p>  \n                    <ul>\n                      {persons && persons.map((person, index) => {\n                        return <li >{person.name}\n                          {person.phone}\n                          {person.address}\n                          <p\n                            style={{ display: person.working ? 'block' : 'none' }}>{person.phone}\n                          </p><button onClick={() => displayWorking(person.id)}>show working</button><button onClick={() => DelItem(person.id)}> {a && \"delete\" || \"add\"}</button>\n                          <p style={{ backgroundColor: \"#708090\", color: \"#FFFAFA\" }}>{jobPlaces[index].jobs}</p>\n                        </li>\n                      })\n                      }\n                    </ul>\n                  </p>\n                }\n                {box.map((boxItem, index) => (\n                  <div key={boxItem.id}>\n                    <BoxSisu2\n                      on={boxItem.on}\n                      id={boxItem.id}\n                      vajuta={vajuta}\n                      time={weatherData && Array.isArray(weatherData.hourly.time) ? weatherData.hourly.time[index] : \"no data\"}\n                    />\n                  </div>\n                ))}\n                {/*  <BoxSisu\n                      on={box.on}\n                      id={box.id}\n                      vajuta={vajuta}\n                    /> \n\n\n                <img src={picture} alt=\"a picture\" onClick={toggle} />\n                <button onClick={Lisa}>Add Item</button>\n\n                {kalakutta.map(item => {\n                  return (\n                    <div key={item.item} id={item.id}>\n                      <p>{item.item}</p>\n                      <button onClick={() => DeleteItem(item.id)}>Delete</button>\n                    </div>\n                  )\n                })}\n\n\n                <div>\n                  Calculator\n                  <p onClick={muuda}>{count}</p>\n                  <button onClick={add}>Add</button>\n                  <button onClick={subs}>substract</button>\n                </div>\n                {weatherData ? (\n                  <div>\n                    {weatherData.hourly.time.map((item, index) => ({\n                      id: index, \n                      name: item\n                    })).map(({ id, name }) => (\n                      <div key={id}>\n                        <p>{name}</p>\n                        <button onClick={() => deleteItem(id)}>Delete</button>\n                      </div>\n                    ))}\n                  </div>\n                ) : (<p>No data!</p>)\n              }*/}\n      </div>\n\n\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbpHG;EA2ID,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,KAAK,CAACC,QAAQ,CAACO,MAAM,CAAC;EAClDQ,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzB,oBACEP,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBT,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBN,MAAM,iBACLH,OAAA;QAAKQ,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBN,MAAM,CAACO,GAAG,CAAC,CAACL,MAAM,EAAEM,KAAK,kBACxBX,OAAA;UAAKQ,SAAS,EAAC,UAAU;UAAAC,QAAA,eACvBT,OAAA,CAACF,eAAe;YACdc,OAAO,EAAEP,MAAM,CAACO,OAAQ;YACxBC,KAAK,EAAER,MAAM,CAACQ,KAAM;YACpBC,SAAS,EAAET,MAAM,CAACS,SAAU;YAC5BR,IAAI,EAAED,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,GAAG,SAAS,GAAGF,MAAM,CAACC;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E;QAAC,GAN2Bb,MAAM,CAACc,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOnC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAINlB,OAAA;MAAAS,QAAA,EAAK;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV;AAAChB,EAAA,CA/OQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgPZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}