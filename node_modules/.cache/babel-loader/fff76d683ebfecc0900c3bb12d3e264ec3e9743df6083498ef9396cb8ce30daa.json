{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\componenst\\\\PeopleComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport EditModal from './EditModal';\nimport { useState, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PeopleComponent = props => {\n  _s();\n  // tüüpiline komponent, mis kasutab väärttuste kuvamiseks  props. \n  const [like, setLike] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false); // state mis kontrolli modal avamist ja sulgemist, vastavalt boolean  väärtusele true or false \n\n  const openModal = () => {\n    setIsModalOpen(prev => !prev); //  modal avamiseks\n  };\n  const closeModal = () => {\n    setIsModalOpen(prev => !prev); // modal sulgemiseks \n  };\n  const addToFolder = id => {\n    console.log(id, props.id);\n    /*  const addToFolder = (folderId, personId) => {\r\n         // Find the folder object corresponding to the clicked button\r\n         const folderToUpdate = props.folders.find(folder => folder.id === folderId);\r\n         if (folderToUpdate) {\r\n             // Update the folder's image array by adding the person's information\r\n             const updatedFolder = {\r\n                 ...folderToUpdate,\r\n                 image: [...folderToUpdate.image, { id: personId, phone: props.phone }] // Add person's phone to image array\r\n             };\r\n             // Update the folders array in state with the updated folder object\r\n             const updatedFolders = props.folders.map(folder =>\r\n                 folder.id === folderId ? updatedFolder : folder\r\n             );\r\n             // Update state with the updated folders array\r\n             props.setFolders(updatedFolders);\r\n         }\r\n     }; */\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.picture instanceof File ? URL.createObjectURL(props.picture) : props.picture,\n          className: \"card-img-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#343a40',\n            color: '#f8f9fa',\n            border: '1px solid #343a40',\n            marginRight: '10px',\n            padding: '6px 12px',\n            textAlign: 'center',\n            textDecoration: 'none',\n            display: 'inline-block',\n            fontSize: '16px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            margin: '3px'\n          },\n          onClick: openModal,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#343a40',\n            color: '#f8f9fa',\n            border: '1px solid #343a40',\n            marginRight: '10px',\n            padding: '6px 12px',\n            textAlign: 'center',\n            textDecoration: 'none',\n            display: 'inline-block',\n            fontSize: '16px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            margin: '3px'\n          },\n          onClick: () => props.Delete(props.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: props.like ? '#4FC3F7' : '#343a40',\n            color: '#f8f9fa',\n            border: '1px solid #343a40',\n            marginRight: '10px',\n            padding: '6px 12px',\n            textAlign: 'center',\n            textDecoration: 'none',\n            display: 'inline-block',\n            fontSize: '16px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            margin: '3px'\n          },\n          onClick: () => props.toggleLike(props.id),\n          children: props.like ? \"Liked\" : \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Phone: \", props.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Education: \", props.education]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#ffffff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: '#343a40',\n            color: \"white\"\n          },\n          children: [\"Add item to folder \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 98\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), props.folders && props.folders.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#C09DC2',\n            color: \"white\",\n            margin: \"3px, 4px, 6px\"\n          },\n          className: \"btn  mr-2\",\n          onClick: () => addToFolder(item.id, props.id),\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      isOpen: isModalOpen /*  Modali komponent , annan props, kaasa , samuti ka addEdited(),  mis asub  App.js is */,\n      onClose: closeModal,\n      namePlaceholder: props.name,\n      phonePlaceholder: props.phone,\n      educationPlaceholder: props.education,\n      addEdited: props.addEdited,\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PeopleComponent, \"xpnWTrlo2PAPkMshrBDCXvzvF4s=\");\n_c = PeopleComponent;\nexport default PeopleComponent;\nvar _c;\n$RefreshReg$(_c, \"PeopleComponent\");","map":{"version":3,"names":["React","Card","EditModal","useState","useRef","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","PeopleComponent","props","_s","like","setLike","isModalOpen","setIsModalOpen","openModal","prev","closeModal","addToFolder","id","console","log","children","className","style","marginTop","position","src","picture","File","URL","createObjectURL","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","color","border","marginRight","padding","textAlign","textDecoration","display","fontSize","borderRadius","cursor","margin","onClick","Delete","toggleLike","name","phone","education","folders","map","item","isOpen","onClose","namePlaceholder","phonePlaceholder","educationPlaceholder","addEdited","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/componenst/PeopleComponent.jsx"],"sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport EditModal from './EditModal';\r\nimport { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst PeopleComponent = (props) => {                 // tüüpiline komponent, mis kasutab väärttuste kuvamiseks  props. \r\n    const [like, setLike] = useState(true);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);  // state mis kontrolli modal avamist ja sulgemist, vastavalt boolean  väärtusele true or false \r\n\r\n\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(prev => !prev); //  modal avamiseks\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(prev => !prev);// modal sulgemiseks \r\n    };\r\n\r\n    const addToFolder = (id) => {\r\n        console.log(id, props.id)\r\n        /*  const addToFolder = (folderId, personId) => {\r\n             // Find the folder object corresponding to the clicked button\r\n             const folderToUpdate = props.folders.find(folder => folder.id === folderId);\r\n             if (folderToUpdate) {\r\n                 // Update the folder's image array by adding the person's information\r\n                 const updatedFolder = {\r\n                     ...folderToUpdate,\r\n                     image: [...folderToUpdate.image, { id: personId, phone: props.phone }] // Add person's phone to image array\r\n                 };\r\n                 // Update the folders array in state with the updated folder object\r\n                 const updatedFolders = props.folders.map(folder =>\r\n                     folder.id === folderId ? updatedFolder : folder\r\n                 );\r\n                 // Update state with the updated folders array\r\n                 props.setFolders(updatedFolders);\r\n             }\r\n         }; */\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"card\" style={{ marginTop: \"20px\" }} >\r\n                <div style={{ position: 'relative' }}>\r\n\r\n                    <img src={props.picture instanceof File ? URL.createObjectURL(props.picture) : props.picture} className=\"card-img-top\" />\r\n\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: '#343a40',\r\n                            color: '#f8f9fa',\r\n                            border: '1px solid #343a40',\r\n                            marginRight: '10px',\r\n                            padding: '6px 12px',\r\n                            textAlign: 'center',\r\n                            textDecoration: 'none',\r\n                            display: 'inline-block',\r\n                            fontSize: '16px',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer',\r\n                            margin: '3px'\r\n                        }}\r\n                        onClick={openModal}\r\n                    >Edit\r\n                    </button> {/* // funktsioon mis ava modal i (andmete uuendamine/updateimine) */}\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: '#343a40',\r\n                            color: '#f8f9fa',\r\n                            border: '1px solid #343a40',\r\n                            marginRight: '10px',\r\n                            padding: '6px 12px',\r\n                            textAlign: 'center',\r\n                            textDecoration: 'none',\r\n                            display: 'inline-block',\r\n                            fontSize: '16px',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer',\r\n                            margin: '3px'\r\n                        }}\r\n                        onClick={() => props.Delete(props.id)}>\r\n                        Delete\r\n                    </button>\r\n                    <button\r\n                        style={{\r\n                            backgroundColor: props.like ? '#4FC3F7' : '#343a40',\r\n                            color: '#f8f9fa',\r\n                            border: '1px solid #343a40',\r\n                            marginRight: '10px',\r\n                            padding: '6px 12px',\r\n                            textAlign: 'center',\r\n                            textDecoration: 'none',\r\n                            display: 'inline-block',\r\n                            fontSize: '16px',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer',\r\n                            margin: '3px'\r\n                        }}\r\n                        onClick={() => props.toggleLike(props.id)}\r\n                    >{props.like ? \"Liked\" : \"Like\"}\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <p className=\"card-text\">Phone: {props.phone}</p>\r\n                    <p className=\"card-text\">Education: {props.education}</p>\r\n                </div>\r\n\r\n                <div style={{ backgroundColor: '#ffffff' }}>\r\n                    <p style={{ backgroundColor: '#343a40', color: \"white\" }}>Add item to folder <h3>+</h3> </p>\r\n                    {props.folders && props.folders.map((item) => (\r\n                        <button\r\n                            style={{ backgroundColor: '#C09DC2', color: \"white\", margin: \"3px, 4px, 6px\" }}\r\n                            className=\"btn  mr-2\"\r\n                            onClick={() => addToFolder(item.id, props.id)}\r\n                            key={item.id}\r\n                        >\r\n                            {item.name}\r\n                        </button>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n            </div >\r\n            <EditModal isOpen={isModalOpen} /*  Modali komponent , annan props, kaasa , samuti ka addEdited(),  mis asub  App.js is */\r\n                onClose={closeModal}\r\n                namePlaceholder={props.name}\r\n                phonePlaceholder={props.phone}\r\n                educationPlaceholder={props.education}\r\n                addEdited={props.addEdited}\r\n                id={props.id}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PeopleComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}