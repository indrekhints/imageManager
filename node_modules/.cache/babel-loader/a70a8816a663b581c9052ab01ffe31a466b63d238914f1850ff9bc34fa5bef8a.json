{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Lemmikud from './Lemmikud';\nimport reportWebVitals from './reportWebVitals';\nimport People from './People';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWithPeople = () => {\n  _s();\n  const [people, setPeople] = useState(People);\n  const [isLiked, setIsLiked] = useState([]);\n  const [LikeButtonColor, setLikeButtonColor] = useState(true);\n  const toggleLike = id => {\n    setPeople(prevPeople => {\n      const updatedPeople = prevPeople.map(person => person.id === id ? {\n        ...person,\n        like: !person.like\n      } : person);\n      // Update the isLiked state array based on the updated people array\n      const likedIds = updatedPeople.filter(person => person.like);\n      setIsLiked(likedIds);\n      setLikeButtonColor(prev => !prev);\n      return updatedPeople;\n    });\n  };\n  const removeFromFavorites = id => {\n    setPeople(prevPeople => prevPeople.map(person => person.id === id ? {\n      ...person,\n      like: !person.like\n    } : person));\n    setIsLiked(prev => prev.filter(item => item.id = !id));\n    return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(HashRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(App, {\n              people: people,\n              setPeople: setPeople,\n              isLiked: isLiked,\n              setIsLiked: setIsLiked,\n              toggleLike: toggleLike,\n              LikeButtonColor: LikeButtonColor,\n              setLikeButtonColor: setLikeButtonColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Lemmikud\",\n            element: /*#__PURE__*/_jsxDEV(Lemmikud, {\n              people: people,\n              setPeople: setPeople,\n              isLiked: isLiked /* removeFromFavorites={removeFromFavorites} */\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(AppWithPeople, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n};\n_s(AppWithPeople, \"jmBYXXmenAGR3XwVk4oL7aK9Tvk=\");\n_c = AppWithPeople;\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"AppWithPeople\");","map":{"version":3,"names":["ReactDOM","BrowserRouter","Router","Routes","Route","HashRouter","App","Lemmikud","reportWebVitals","People","React","useState","jsxDEV","_jsxDEV","AppWithPeople","_s","people","setPeople","isLiked","setIsLiked","LikeButtonColor","setLikeButtonColor","toggleLike","id","prevPeople","updatedPeople","map","person","like","likedIds","filter","prev","removeFromFavorites","item","StrictMode","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","render","document","getElementById","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/index.js"],"sourcesContent":["\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Lemmikud from './Lemmikud';\nimport reportWebVitals from './reportWebVitals';\nimport People from './People';\nimport React, { useState } from 'react';\n\nconst AppWithPeople = () => {\n  const [people, setPeople] = useState(People);\n  const [isLiked, setIsLiked] = useState([]);\n  const [LikeButtonColor, setLikeButtonColor] = useState(true)\n\n\n\n  const toggleLike = (id) => {\n    setPeople(prevPeople => {\n      const updatedPeople = prevPeople.map(person =>\n        person.id === id ? { ...person, like: !person.like } : person\n      );\n      // Update the isLiked state array based on the updated people array\n      const likedIds = updatedPeople.filter(person => person.like)\n      setIsLiked(likedIds);\n      setLikeButtonColor(prev => !prev)\n\n      return updatedPeople;\n    });\n  };\n\n  const removeFromFavorites = (id) => {\n    setPeople(prevPeople => (\n      prevPeople.map(person => (\n        person.id === id ? { ...person, like: !person.like } : person\n      ))\n    ))\n    setIsLiked(prev => prev.filter(item => item.id = !id)\n    )\n\n\n\n    return (\n      <React.StrictMode>\n        <HashRouter>\n          <Routes>\n\n            <Route path=\"/\" element={<App people={people} setPeople={setPeople} isLiked={isLiked}\n              setIsLiked={setIsLiked} toggleLike={toggleLike} LikeButtonColor={LikeButtonColor}\n              setLikeButtonColor={setLikeButtonColor} />} />\n\n            <Route path=\"/Lemmikud\" element={<Lemmikud people={people} setPeople={setPeople}\n              isLiked={isLiked} /* removeFromFavorites={removeFromFavorites} */ />} />\n          </Routes>\n        </HashRouter>\n      </React.StrictMode>\n    );\n  }\n\n  ReactDOM.render(\n    <AppWithPeople />,\n    document.getElementById('root')\n  );\n}\nreportWebVitals()"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}