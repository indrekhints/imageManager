{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\Folders.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport NavBar from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Folders = ({\n  people,\n  setPeople,\n  isLiked,\n  removeFromFavorites,\n  folders,\n  setFolders\n}) => {\n  _s();\n  const randomNumber = Math.floor(Math.random() * 1000000) + 1;\n  const [newFolder, setNewFolder] = useState({\n    id: randomNumber,\n    name: \"\",\n    image: [],\n    description: \"\",\n    visibility: false\n  });\n  const greateDirectory = e => {\n    console.log(folders);\n    e.preventDefault();\n    setFolders(prevFolders => [...prevFolders, newFolder]);\n    setNewFolder({\n      id: randomNumber,\n      name: \"\",\n      image: [],\n      description: \"\",\n      visibility: true\n    });\n  };\n  const handleChange = e => {\n    /* onChange funktsiooni formis info kogumiseks newFolder state i.  */\n    setNewFolder(prev => ({\n      ...prev,\n      /* onChange updatetib iga sisse typeitud tähe/sümboliga antud välja objektis */\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleVisibility = itemId => {\n    setFolders(prevFolders => prevFolders.map(item => item.id === itemId ? {\n      ...item,\n      visibility: !item.visibility\n    } : item));\n  };\n  console.log(folders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: greateDirectory,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          placeholder: \"Enter folder name\",\n          onChange: handleChange,\n          name: \"name\",\n          value: newFolder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"description\",\n          placeholder: \"Enter some description\",\n          onChange: handleChange,\n          name: \"description\",\n          value: newFolder.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn mr-2\",\n            style: {\n              backgroundColor: \"#ABA5B1\"\n            },\n            children: \"Greate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), folders && folders.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-secondary bg-light shadow-sm my-2 pb-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0 text-light text-uppercase d-flex align-items-center\",\n        style: {\n          cursor: \"pointer\",\n          backgroundColor: \"#575160\"\n        },\n        onClick: () => handleVisibility(item.id),\n        children: [\"FOLDER: \", item.name, item.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), item.visibility && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2\",\n        children: item.image.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: item.image.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: item.image.map((unit, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: unit.img instanceof File ? URL.createObjectURL(unit.img) : unit.img,\n              alt: \"Image\",\n              style: {\n                marginRight: '10px',\n                width: '300px',\n                height: 'auto',\n                borderRadius: '10px'\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"E1DEE5\"\n            },\n            children: \"The folder is empty now!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 41\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Folders, \"jeeZ+YSL8zaeT4tWIzBTjadAl8U=\");\n_c = Folders;\nexport default Folders;\nvar _c;\n$RefreshReg$(_c, \"Folders\");","map":{"version":3,"names":["React","Fragment","useState","Button","NavBar","jsxDEV","_jsxDEV","_Fragment","Folders","people","setPeople","isLiked","removeFromFavorites","folders","setFolders","_s","randomNumber","Math","floor","random","newFolder","setNewFolder","id","name","image","description","visibility","greateDirectory","e","console","log","preventDefault","prevFolders","handleChange","prev","target","value","handleVisibility","itemId","map","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","style","backgroundColor","cursor","onClick","length","unit","index","src","img","File","URL","createObjectURL","alt","marginRight","width","height","borderRadius","color","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/Folders.js"],"sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport NavBar from './Nav'\r\n\r\nconst Folders = ({ people, setPeople, isLiked, removeFromFavorites, folders, setFolders }) => {\r\n\r\n    const randomNumber = Math.floor(Math.random() * 1000000) + 1;\r\n    const [newFolder, setNewFolder] = useState(\r\n        {\r\n            id: randomNumber,\r\n            name: \"\",\r\n            image: [],\r\n            description: \"\",\r\n            visibility: false,\r\n\r\n        }\r\n    )\r\n\r\n    const greateDirectory = (e) => {\r\n\r\n        console.log(folders)\r\n        e.preventDefault();\r\n\r\n\r\n        setFolders(prevFolders => [...prevFolders, newFolder]);\r\n        setNewFolder({\r\n            id: randomNumber, name: \"\", image: [], description: \"\", visibility: true\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChange = (e) => {    /* onChange funktsiooni formis info kogumiseks newFolder state i.  */\r\n        setNewFolder(prev => ({\r\n            ...prev,                /* onChange updatetib iga sisse typeitud tähe/sümboliga antud välja objektis */\r\n            [e.target.name]: e.target.value\r\n        }));\r\n\r\n    };\r\n    const handleVisibility = (itemId) => {\r\n        setFolders(prevFolders =>\r\n            prevFolders.map(item =>\r\n                item.id === itemId ? { ...item, visibility: !item.visibility } : item\r\n            )\r\n        );\r\n    };\r\n    console.log(folders)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <NavBar />\r\n            <form onSubmit={greateDirectory}>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        placeholder='Enter folder name'\r\n                        onChange={handleChange}\r\n                        name=\"name\"\r\n                        value={newFolder.name}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"description\"\r\n                        placeholder='Enter some description'\r\n                        onChange={handleChange}\r\n                        name=\"description\"\r\n                        value={newFolder.description}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"submit\" className=\"btn mr-2\" style={{ backgroundColor: \"#ABA5B1\" }}>Greate</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n            {folders && folders.map((item) => (\r\n                <div className=\"border border-secondary bg-light shadow-sm my-2 pb-0\" key={item.id}>\r\n                    <p\r\n                        className=\"mb-0 text-light text-uppercase d-flex align-items-center\"\r\n                        style={{ cursor: \"pointer\", backgroundColor: \"#575160\" }}\r\n                        onClick={() => handleVisibility(item.id)}\r\n                    >\r\n                        FOLDER: {item.name}{item.description}\r\n                    </p>\r\n\r\n\r\n                    {item.visibility && (\r\n                        <div className=\"border p-2\">\r\n                            {item.image.length > 0 && (\r\n\r\n                                <>\r\n                                    {item.image.length > 0 ? (\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            {item.image.map((unit, index) => (\r\n                                                <img\r\n                                                    src={unit.img instanceof File ? URL.createObjectURL(unit.img) : unit.img}\r\n                                                    alt=\"Image\"\r\n                                                    key={index}\r\n                                                    style={{\r\n                                                        marginRight: '10px',\r\n                                                        width: '300px',\r\n                                                        height: 'auto',\r\n                                                        borderRadius: '10px'\r\n                                                    }}\r\n                                                />\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <p style={{ color: \"E1DEE5\" }}>The folder is empty now!</p>\r\n                                    )}\r\n\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            ))}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Folders"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}