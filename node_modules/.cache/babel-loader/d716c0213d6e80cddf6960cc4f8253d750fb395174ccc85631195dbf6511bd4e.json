{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Lemmikud from './Lemmikud';\nimport reportWebVitals from './reportWebVitals';\nimport People from './People';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWithPeople = () => {\n  _s();\n  const [people, setPeople] = useState(People);\n  const [isLiked, setIsLiked] = useState([]);\n  const toggleLike = (id, isLiked) => {\n    setPeople(prevPeople => {\n      const updatedPeople = prevPeople.map(person => person.id === id ? {\n        ...person,\n        like: !person.like\n      } : person);\n      // Update the isLiked state array based on the updated people array\n      const likedIds = updatedPeople.filter(person => person.like);\n      setIsLiked(likedIds);\n      return updatedPeople;\n    });\n  };\n\n  /* const toggleLike = (id) => { // functsioon mis liidab Liked itemid Lemmiku componenti(renderdan isLiked array sinna)\n    setPeople(prevPeople => {\n      return prevPeople.map(person => {\n        if (person.id === id) {\n          const updatedPerson = { ...person, like: !person.like };\n          // Update isLiked state\n          if (!isLiked.includes(updatedPerson.id)) {\n            setIsLiked(prevLiked => [...prevLiked, updatedPerson.id]);\n          } else {\n            setIsLiked(prevLiked => prevLiked.filter(item => item !== updatedPerson.id));\n          }\n          return updatedPerson;\n        }\n        return person;\n      });\n    });\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {\n            people: people,\n            setPeople: setPeople,\n            isLiked: isLiked,\n            setIsl: true,\n            Liked: setIsLiked,\n            toggleLike: toggleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Lemmikud\",\n          element: /*#__PURE__*/_jsxDEV(Lemmikud, {\n            people: people,\n            setPeople: setPeople,\n            isLiked: isLiked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AppWithPeople, \"eg5bSGxow0IJSc44nMh1uiH06XE=\");\n_c = AppWithPeople;\nReactDOM.render( /*#__PURE__*/_jsxDEV(AppWithPeople, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"AppWithPeople\");","map":{"version":3,"names":["ReactDOM","BrowserRouter","Router","Routes","Route","HashRouter","App","Lemmikud","reportWebVitals","People","React","useState","jsxDEV","_jsxDEV","AppWithPeople","_s","people","setPeople","isLiked","setIsLiked","toggleLike","id","prevPeople","updatedPeople","map","person","like","likedIds","filter","StrictMode","children","path","element","setIsl","Liked","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/index.js"],"sourcesContent":["\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Lemmikud from './Lemmikud';\nimport reportWebVitals from './reportWebVitals';\nimport People from './People';\nimport React, { useState } from 'react';\n\nconst AppWithPeople = () => {\n  const [people, setPeople] = useState(People);\n  const [isLiked, setIsLiked] = useState([]);\n\n  const toggleLike = (id, isLiked) => {\n    setPeople(prevPeople => {\n      const updatedPeople = prevPeople.map(person =>\n        person.id === id ? { ...person, like: !person.like } : person\n      );\n      // Update the isLiked state array based on the updated people array\n      const likedIds = updatedPeople.filter(person => person.like)\n      setIsLiked(likedIds);\n\n      return updatedPeople;\n    });\n  };\n\n  /* const toggleLike = (id) => { // functsioon mis liidab Liked itemid Lemmiku componenti(renderdan isLiked array sinna)\n    setPeople(prevPeople => {\n      return prevPeople.map(person => {\n        if (person.id === id) {\n          const updatedPerson = { ...person, like: !person.like };\n          // Update isLiked state\n          if (!isLiked.includes(updatedPerson.id)) {\n            setIsLiked(prevLiked => [...prevLiked, updatedPerson.id]);\n          } else {\n            setIsLiked(prevLiked => prevLiked.filter(item => item !== updatedPerson.id));\n          }\n          return updatedPerson;\n        }\n        return person;\n      });\n    });\n  }; */\n\n\n  return (\n    <React.StrictMode>\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<App people={people} setPeople={setPeople} isLiked={isLiked} setIsl\n            Liked={setIsLiked} toggleLike={toggleLike} />} />\n          <Route path=\"/Lemmikud\" element={<Lemmikud people={people} setPeople={setPeople} isLiked={isLiked} />} />\n        </Routes>\n      </HashRouter>\n    </React.StrictMode>\n  );\n}\n\nReactDOM.render(\n  <AppWithPeople />,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}