{"ast":null,"code":"import React,{useState}from'react';import Dropdown from'react-bootstrap/Dropdown';import DropDownModal from'./DropDownModal';import{Modal}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Form=props=>{const randomNumber=Math.floor(Math.random()*1000000)+1;const[data,setData]=React.useState({id:randomNumber,name:\"\",phone:\"\",education:\"\",picture:\"\"});const[showModal,setShowModal]=useState(false);const[selectedPerson,setSelectedPerson]=useState(null);const handleChange=e=>{/* onChange funktsiooni formis info kogumiseks dara state i.  */setData(prevData=>({/* tagastab vana endise objekti  välja arvatud nime väli, mis annab sellele uue väärtuse */...prevData,/* onChange update ib iga sisse typeitud tähe/sümboliga antud välja objektis */[e.target.name]:e.target.value}));};const handleFileChange=e=>{setData(prevData=>({...prevData,picture:e.target.files[0]}));};const handleSubmit=e=>{console.log(data);e.preventDefault();props.addItem(data);//saadame data andmed  add itemi funktsioonile poripside kaudu, asub App.js\nsetData({id:randomNumber,name:\"\",phone:\"\",education:\"\",picture:\"\"//tühjendab väljad\n});};const handleItemClick=person=>{console.log(person.name,person.id);setShowModal(true);setSelectedPerson(person);};const closeModal=()=>{// Close the modal\nsetShowModal(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"name\",placeholder:\"Enter your name\",onChange:handleChange,name:\"name\",value:data.name}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"phone\",placeholder:\"Enter your phone\",onChange:handleChange,name:\"phone\",value:data.phone}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"education\",placeholder:\"Enter your education\",onChange:handleChange,name:\"education\",value:data.education}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-control\",id:\"file\",onChange:handleFileChange,name:\"image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn  mr-2\",style:{backgroundColor:\"#ABA5B1\",color:\"white\"},children:\"Add new item:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"secondary\",id:\"dropdown-basic\",children:\"Dropdown\"}),/*#__PURE__*/_jsx(Dropdown.Menu,{children:props.people.map(person=>/*#__PURE__*/_jsx(Dropdown.Item,{onClick:()=>handleItemClick(person),children:person.name},person.id))})]})})]})]}),selectedPerson&&/*#__PURE__*/ // Render the modal if a person is selected\n_jsx(DropDownModal,{show:showModal,onHide:closeModal,person:selectedPerson})]});};export default Form;","map":{"version":3,"names":["React","useState","Dropdown","DropDownModal","Modal","jsx","_jsx","jsxs","_jsxs","Form","props","randomNumber","Math","floor","random","data","setData","id","name","phone","education","picture","showModal","setShowModal","selectedPerson","setSelectedPerson","handleChange","e","prevData","target","value","handleFileChange","files","handleSubmit","console","log","preventDefault","addItem","handleItemClick","person","closeModal","className","children","onSubmit","type","placeholder","onChange","style","backgroundColor","color","Toggle","variant","Menu","people","map","Item","onClick","show","onHide"],"sources":["C:/Users/Lenovo/Desktop/imageManager/src/componenst/form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropDownModal from './DropDownModal';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst Form = (props) => {\r\n\r\n    const randomNumber = Math.floor(Math.random() * 1000000) + 1;\r\n\r\n    const [data, setData] = React.useState({\r\n\r\n        id: randomNumber, name: \"\", phone: \"\", education: \"\", picture: \"\"\r\n    });\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedPerson, setSelectedPerson] = useState(null);\r\n\r\n    const handleChange = (e) => {    /* onChange funktsiooni formis info kogumiseks dara state i.  */\r\n        setData(prevData => ({    /* tagastab vana endise objekti  välja arvatud nime väli, mis annab sellele uue väärtuse */\r\n            ...prevData,                /* onChange update ib iga sisse typeitud tähe/sümboliga antud välja objektis */\r\n            [e.target.name]: e.target.value\r\n        }));\r\n    };\r\n\r\n\r\n\r\n    const handleFileChange = (e) => {\r\n        setData(prevData => ({\r\n            ...prevData,\r\n            picture: e.target.files[0]\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        console.log(data)\r\n        e.preventDefault();\r\n        props.addItem(data); //saadame data andmed  add itemi funktsioonile poripside kaudu, asub App.js\r\n        setData({\r\n            id: randomNumber, name: \"\", phone: \"\", education: \"\", picture: \"\" //tühjendab väljad\r\n        });\r\n\r\n\r\n    };\r\n\r\n    const handleItemClick = (person) => {\r\n        console.log(person.name, person.id)\r\n        setShowModal(true);\r\n        setSelectedPerson(person);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        // Close the modal\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        placeholder='Enter your name'\r\n                        onChange={handleChange}\r\n                        name=\"name\"\r\n                        value={data.name}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phone\"\r\n                        placeholder='Enter your phone'\r\n                        onChange={handleChange}\r\n                        name=\"phone\"\r\n                        value={data.phone}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"education\"\r\n                        placeholder='Enter your education'\r\n                        onChange={handleChange}\r\n                        name=\"education\"\r\n                        value={data.education}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        id=\"file\"\r\n                        onChange={handleFileChange}\r\n                        name=\"image\"\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"submit\" className=\"btn  mr-2\" style={{ backgroundColor: \"#ABA5B1\", color: \"white\" }}>Add new item:</button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                Dropdown\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                {props.people.map((person) => (\r\n                                    <Dropdown.Item key={person.id} onClick={() => handleItemClick(person)}>\r\n                                        {person.name}\r\n                                    </Dropdown.Item>\r\n                                ))}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n            {selectedPerson && ( // Render the modal if a person is selected\r\n                <DropDownModal show={showModal} onHide={closeModal} person={selectedPerson} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}