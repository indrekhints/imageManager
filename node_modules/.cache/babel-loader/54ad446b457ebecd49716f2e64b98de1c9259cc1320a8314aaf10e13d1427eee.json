{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bobzirolluuesti\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { useState } from 'react';\nimport People from \"./People\"; // impordin andmes sisse komponendist People, salvestan state väärktuseks [people]\nimport PeopleComponent from './componenst/PeopleComponent';\nimport Form from './componenst/form';\nimport Lemmikud from './componenst/Lemmikud';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [people, setPeople] = React.useState(People);\n  const addItem = newItem => {\n    // teen argumentidega funktsiooni et lisada uus item array se people!\n    setPeople(prevPeople => [...prevPeople, newItem]); // kasutan spread operaatorit  uued itemi lismiseks\n  };\n  const addEdited = (id, newData) => {\n    const newArray = people.map(person =>\n    // funktsioon  mis kasutab sisendeid id ja newData itereerib people array d. \n    person.id === id ? {\n      ...newData\n    } : person // funktsioon käib läbi people array ja kui tuvastab sama id mis on sisendis siis selle Itemi kirjutab \n    ); //üle uue data ga. Uueks dataks saab  komponendis EdidModali formi täitmiselt tekkiv info(või ehk.  data)\n    setPeople(newArray); // kuna map() tagastab meile uue array, siis peame people State muutma uueks arrayks. (people array\n  }; // on pea array, mida kuvatakse \n\n  const Delete = id => {\n    console.log(id);\n    setPeople(people.filter(person => person.id !== id));\n  };\n  //KUTSTUTAB ITEMI ARRAYST \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Lemmikud\",\n            children: /*#__PURE__*/_jsxDEV(Lemmikud, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Lemmikud\",\n                children: \"Lemmikud\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: people &&\n          /*#__PURE__*/\n          //  people && tähendab  conditional render, kui state muutuja omab sisu ehkt on (true), \n          _jsxDEV(\"div\", {\n            className: \"row\",\n            children: [\"                         \", people.map((person, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: [\"   \", /*#__PURE__*/_jsxDEV(PeopleComponent, {\n                picture: person.picture,\n                phone: person.phone,\n                education: person.education,\n                name: person.name,\n                id: person.id,\n                addEdited: addEdited,\n                Delete: Delete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          addItem: addItem /*     kuvame komponendi <Form /> , anname kaas props. muutujana funktsiooni addItem(). mida kirjeldasin üleval*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"                                        \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"z8RML1W+QUUxnzTIWEuvxHbcLP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","People","PeopleComponent","Form","Lemmikud","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isModalOpen","setIsModalOpen","people","setPeople","addItem","newItem","prevPeople","addEdited","id","newData","newArray","map","person","Delete","console","log","filter","children","className","exact","path","fileName","_jsxFileName","lineNumber","columnNumber","to","index","picture","phone","education","name","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bobzirolluuesti/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React, { useState } from 'react';\nimport People from \"./People\";                      // impordin andmes sisse komponendist People, salvestan state väärktuseks [people]\nimport PeopleComponent from './componenst/PeopleComponent';\nimport Form from './componenst/form';\nimport Lemmikud from './componenst/Lemmikud';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [people, setPeople] = React.useState(People)\n\n  const addItem = (newItem) => {                      // teen argumentidega funktsiooni et lisada uus item array se people!\n    setPeople(prevPeople => [...prevPeople, newItem]);// kasutan spread operaatorit  uued itemi lismiseks\n  };\n\n  const addEdited = (id, newData) => {\n    const newArray = people.map(person =>             // funktsioon  mis kasutab sisendeid id ja newData itereerib people array d. \n      person.id === id ? { ...newData } : person      // funktsioon käib läbi people array ja kui tuvastab sama id mis on sisendis siis selle Itemi kirjutab \n    );                                                 //üle uue data ga. Uueks dataks saab  komponendis EdidModali formi täitmiselt tekkiv info(või ehk.  data)\n    setPeople(newArray);                               // kuna map() tagastab meile uue array, siis peame people State muutma uueks arrayks. (people array\n  };                                                    // on pea array, mida kuvatakse \n\n  const Delete = (id) => {\n    console.log(id)\n    setPeople(people.filter(person => person.id !== id));\n  }\n  //KUTSTUTAB ITEMI ARRAYST \n  return (\n    <>\n      <div className=\"App\">\n        <Router>\n          <Routes>\n            <Route exact path=\"/\">\n              <App />\n            </Route>\n            <Route path=\"/Lemmikud\">\n              <Lemmikud />\n            </Route>\n          </Routes>\n\n          <nav>\n            <ul>\n              <li>\n                {/* Lisa link lemmikute lehele */}\n                <Link to=\"/Lemmikud\">Lemmikud</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"container\">\n            {people && (                                    //  people && tähendab  conditional render, kui state muutuja omab sisu ehkt on (true), \n              <div className=\"row\">                         {/* arrayde puhul tähendb array liikmete olemas olu tagastust true, igal index kohal arrays. */}\n                {people.map((person, index) => (\n                  <div className=\"col-md-4\" key={index}>   {/*   iterreerime üle people array ja igal kohal arrays  renderdame <PeopleComponendi />, millele anname kaasa \n                                                         //props muutujad, nt phone={person.phone}  */}\n                    <PeopleComponent\n                      picture={person.picture}\n                      phone={person.phone}\n                      education={person.education}\n                      name={person.name}\n                      id={person.id}\n                      addEdited={addEdited}\n                      Delete={Delete}\n\n\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <Form\n            addItem={addItem}                      /*     kuvame komponendi <Form /> , anname kaas props. muutujana funktsiooni addItem(). mida kirjeldasin üleval*/\n          />                                        {/* ilmselt oleksin saanud kasutada ühte form komponenti nii <EditModal/> is kui ka <Form /> */}\n\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}